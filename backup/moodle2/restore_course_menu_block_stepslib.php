<?php

class restore_course_menu_block_structure_step extends restore_structure_step
{

    /**
     * @inheritDoc
     */
    protected function define_structure()
    {

        $paths = [];

        $paths[] = new restore_path_element('course_menu', '/block/course_menu', true);
        $paths[] = new restore_path_element('course_menu_section',
            '/block/course_menu/course_menu_sections/course_menu_section');
        $paths[] = new restore_path_element('course_menu_button',
            '/block/course_menu/course_menu_buttons/course_menu_button');

        return $paths;
    }

    public function process_block($data)
    {
        global $DB;
        $data = (object)$data;

    }

    public function process_course_menu($data)
    {
        global $DB, $USER;

        if (!$this->task->get_blockid()) {
            return;
        }
        // COnvert array to object
        $data = (object)$data;

        $params = [
            'instance' => $this->task->get_blockid(),
            'courseid' => $this->task->get_courseid()
        ];

        // Insert record
        if (!$exists = $DB->record_exists('block_course_menu', $params)) {
            // Create course menu object
            $course_menu_params = new stdClass();
            $course_menu_params->instance = $this->task->get_blockid();
            $course_menu_params->courseid = $this->task->get_courseid();
            $course_menu_params->section_zero = $data->section_zero;
            $course_menu_params->usermodified = $USER->id;
            $course_menu_params->timemodified = time();
            $course_menu_params->timecreated = time();
            $new_id = $DB->insert_record('block_course_menu', $course_menu_params);
            // Add sections
            $sections = $data->course_menu_sections['course_menu_section'];
            foreach ($sections as $key => $section) {
                $section = (object)$section;
                $section->coursemenuid = $new_id;
                $section->usermodified = $USER->id;
                $section->timemodified = time();
                $section->timecreated = time();
                $DB->insert_record('block_course_menu_section', $section);
            }
            // Add buttons
            $buttons = $data->course_menu_buttons['course_menu_button'];
            foreach ($buttons as $key => $button) {
                $button = (object)$button;
                $button->coursemenuid = $new_id;
                $button->usermodified = $USER->id;
                $button->timemodified = time();
                $button->timecreated = time();
                $DB->insert_record('block_course_menu_button', $button);
            }
        } else {
            return;
        }
    }

    /**
     * Update CMIDs for all buttons
     * @return void
     * @throws dml_exception
     */
    protected function after_restore()
    {
        global $DB;
        parent::after_restore(); // TODO: Change the autogenerated stub
        // Get course menu id
        $course_menu = $DB->get_record('block_course_menu', ['instance' => $this->task->get_blockid()]);
        // Get buttons
        $buttons = $DB->get_records('block_course_menu_button', ['coursemenuid' => $course_menu->id]);
        // Update cmid for all buttons
        foreach ($buttons as $button) {
            // Get module id
            // If module exists continue
            if ($module = $DB->get_record('modules', ['name' => $button->mod_name])) {
                // Check to see if module instance exists
                if ($mod_instance = $DB->get_record($button->mod_name, [
                    'name' => $button->mod_title,
                    'course' => $this->task->get_courseid()])) {
                    // Check to see if course module exists
                    if ($mod_cm = $DB->get_record('course_modules', [
                        'module' => $module->id,
                        'instance' => $mod_instance->id,
                        'course' => $this->task->get_courseid()])) {
                        // If the record is found, update the cmid
                        $button->cmid = $mod_cm->id;
                        // Update button
                        $DB->update_record('block_course_menu_button', $button);
                    }
                }
            }
        }
    }
}